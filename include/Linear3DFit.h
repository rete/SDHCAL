  /// \file Linear3DFit.h
/*
 *
 * Linear3DFit.h header template automatically generated by a class generator
 * Creation date : mar. janv. 6 2015
 *
 * This file is part of SDHCAL libraries.
 * 
 * SDHCAL is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * based upon these libraries are permitted. Any copy of these libraries
 * must include this copyright notice.
 * 
 * SDHCAL is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with SDHCAL.  If not, see <http://www.gnu.org/licenses/>.
 * 
 * @author rete
 * @copyright CNRS , IPNL
 */

#ifndef LINEAR3DFIT_HH
#define LINEAR3DFIT_HH

#include <iostream>
#include <string>
#include <cstdlib>
#include <cmath>
#include <vector>

#include "ThreeVector.h"

/**
* Class Linear3DFit.
*
* Fit a 3D line in 3D space. The line equation is the following one :
* x = a*z + b
* y = c*z + d
* z = t
*
*/
class Linear3DFit
{

public :

	Linear3DFit(const std::vector<ThreeVector> &pos);
	~Linear3DFit();

	void           fit();
	void           fit(const std::vector<ThreeVector> &pos);
	float          getChi2() const;
	ThreeVector    vectorFromRealLine(const ThreeVector& vec) const;
	ThreeVector    getNormaleProjection(const ThreeVector& vec) const;
	const float   *getFitParameters() const;
	const float   *getFitParError() const;

protected :

	void computeChi2();

private:

	std::vector<ThreeVector> positions;
	float chi2;
	float params[4];
	float paramsError[4];
};

#endif  //  LINEAR3DFIT_H
